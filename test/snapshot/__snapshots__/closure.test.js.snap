// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`closure argument 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure argument and use 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [
            Variable {
              "byref": false,
              "curly": false,
              "kind": "variable",
              "name": "use",
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure argument by ref 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [
            Parameter {
              "byref": true,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure arguments 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure arguments and uses 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "byref": false,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg",
              },
              "nullable": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [
            Variable {
              "byref": false,
              "curly": false,
              "kind": "variable",
              "name": "use",
            },
            Variable {
              "byref": false,
              "curly": false,
              "kind": "variable",
              "name": "use",
            },
            Variable {
              "byref": false,
              "curly": false,
              "kind": "variable",
              "name": "use",
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure empty 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure simple 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure use 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [
            Variable {
              "byref": false,
              "curly": false,
              "kind": "variable",
              "name": "message",
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`closure use by ref 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"something\\"",
                    "unicode": false,
                    "value": "something",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [
            Variable {
              "byref": true,
              "curly": false,
              "kind": "variable",
              "name": "message",
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
